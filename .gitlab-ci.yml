image: registry.gitlab.com/typokign/microservices/ci:latest

variables:
  DOCKER_HOST: tcp://localhost:2375/
  DOCKER_DRIVER: overlay2
  IMAGE_ARGS: '--set-string gateway.image.tag=${CI_COMMIT_SHORT_SHA} --set-string auth-service.image.tag=${CI_COMMIT_SHORT_SHA} --set-string cart-service.image.tag=${CI_COMMIT_SHORT_SHA} --set-string deposit-service.image.tag=${CI_COMMIT_SHORT_SHA} --set-string order-service.image.tag=${CI_COMMIT_SHORT_SHA} --set-string product-service.image.tag=${CI_COMMIT_SHORT_SHA}'
  CERT_ARGS: '--set-string gateway.ingress.hostname=${CI_COMMIT_REF_SLUG}.k8s.typokign.com'

stages:
  - lint
  - build
  - deploy

lint:
  stage: lint
  script:
    - make lint

build frontend:
  stage: build
  script:
    - cd frontend
    - make build

build gateway:
  stage: build
  services:
    - docker:dind
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE/gateway:latest || true
    - docker build --cache-from $CI_REGISTRY_IMAGE/gateway:latest -t $CI_REGISTRY_IMAGE/gateway:${CI_COMMIT_SHORT_SHA} -t $CI_REGISTRY_IMAGE/gateway:latest services/gateway
    - docker push $CI_REGISTRY_IMAGE/gateway:${CI_COMMIT_SHORT_SHA}
    - docker push $CI_REGISTRY_IMAGE/gateway:latest

build auth-service:
  stage: build
  services:
    - docker:dind
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE/auth-service:latest || true
    - docker build --cache-from $CI_REGISTRY_IMAGE/auth-service:latest -t $CI_REGISTRY_IMAGE/auth-service:${CI_COMMIT_SHORT_SHA} -t $CI_REGISTRY_IMAGE/auth-service:latest services/auth-service
    - docker push $CI_REGISTRY_IMAGE/auth-service:${CI_COMMIT_SHORT_SHA}
    - docker push $CI_REGISTRY_IMAGE/auth-service:latest

build cart-service:
  stage: build
  services:
    - docker:dind
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE/cart-service:latest || true
    - docker build --cache-from $CI_REGISTRY_IMAGE/cart-service:latest -t $CI_REGISTRY_IMAGE/cart-service:${CI_COMMIT_SHORT_SHA} -t $CI_REGISTRY_IMAGE/cart-service:latest services/cart-service
    - docker push $CI_REGISTRY_IMAGE/cart-service:${CI_COMMIT_SHORT_SHA}
    - docker push $CI_REGISTRY_IMAGE/cart-service:latest

build deposit-service:
  stage: build
  services:
    - docker:dind
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE/deposit-service:latest || true
    - docker build --cache-from $CI_REGISTRY_IMAGE/deposit-service:latest -t $CI_REGISTRY_IMAGE/deposit-service:${CI_COMMIT_SHORT_SHA} -t $CI_REGISTRY_IMAGE/deposit-service:latest services/deposit-service
    - docker push $CI_REGISTRY_IMAGE/deposit-service:${CI_COMMIT_SHORT_SHA}
    - docker push $CI_REGISTRY_IMAGE/deposit-service:latest

build order-service:
  stage: build
  services:
    - docker:dind
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE/order-service:latest || true
    - docker build --cache-from $CI_REGISTRY_IMAGE/order-service:latest -t $CI_REGISTRY_IMAGE/order-service:${CI_COMMIT_SHORT_SHA} -t $CI_REGISTRY_IMAGE/order-service:latest services/order-service
    - docker push $CI_REGISTRY_IMAGE/order-service:${CI_COMMIT_SHORT_SHA}
    - docker push $CI_REGISTRY_IMAGE/order-service:latest

build product-service:
  stage: build
  services:
    - docker:dind
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE/product-service:latest || true
    - docker build --cache-from $CI_REGISTRY_IMAGE/product-service:latest -t $CI_REGISTRY_IMAGE/product-service:${CI_COMMIT_SHORT_SHA} -t $CI_REGISTRY_IMAGE/product-service:latest services/product-service
    - docker push $CI_REGISTRY_IMAGE/product-service:${CI_COMMIT_SHORT_SHA}
    - docker push $CI_REGISTRY_IMAGE/product-service:latest

.init_helm: &init_helm |
  mkdir /etc/deploy
  echo "$KUBECONFIG" >> /etc/deploy/config
  helm init --client-only --kubeconfig /etc/deploy/config
  helm repo add stable https://kubernetes-charts.storage.googleapis.com/
  helm repo update
  helm dependency update ./chart

deploy:
  stage: deploy
  image: lwolf/helm-kubectl-docker:latest
  before_script:
    - *init_helm
  script:
    - helm delete --purge ${CI_COMMIT_REF_SLUG} --kubeconfig /etc/deploy/config || true
    - kubectl --kubeconfig /etc/deploy/config create namespace ${CI_COMMIT_REF_SLUG} || true
    - echo "$SECRETS" | kubectl --kubeconfig /etc/deploy/config -n ${CI_COMMIT_REF_SLUG} apply -f -
    - helm upgrade --install --wait --debug --namespace ${CI_COMMIT_REF_SLUG} ${CI_COMMIT_REF_SLUG} ./chart -f ./chart/values.yaml -f ./chart/values_pr.yaml --kubeconfig /etc/deploy/config ${IMAGE_ARGS} ${CERT_ARGS}
  except:
    - master

deploy master:
  stage: deploy
  image: lwolf/helm-kubectl-docker:latest
  before_script:
    - *init_helm
  script:
    - echo "$SECRETS" | kubectl --kubeconfig /etc/deploy/config -n default apply -f -
    - helm upgrade --install --wait --debug --namespace default master ./chart -f ./chart/values.yaml -f ./chart/values_prod.yaml --kubeconfig /etc/deploy/config ${IMAGE_ARGS}
  only:
    - master
